== Introduction - Souliss - Arduino based SmartHome - openHAB Binding  ==

[[Souliss|http://www.souliss.net/]] is a networking framework for Arduino and compatibles board, is designed to build easily a smarthome distributed over multiple boards via Ethernet, wireless point-to-point and RS485 bus. 

=== First Step ===

Starting with the Souliss Binding for openHAB require a deployed network, as minimum you need one Souliss node with Ethernet access configured as [[Gateway|https://code.google.com/p/souliss/wiki/Gateway]], a Gateway is a special node that is able to communicate with the user interfaces (openHAB interact as an user interface for Souliss).

A starting point is the Souliss [[wiki|https://code.google.com/p/souliss/wiki/Introduction?tm=6]], the best is start with a single node and connect with SoulissApp. The code for networking activities of this binding is based on [[SoulissApp|https://code.google.com/p/souliss/wiki/AndroidApplication]] code, so once connected with SoulissApp you can move to openHAB directly.

You can use SoulissApp and the openHAB Souliss Binding at same time, and generally up to five (by default, but can be increased) user interfaces simultaneously.

== General Configuration Requirements ==

=== Binding Network Configuration ===

The openHAB binding isn't able to locate your Souliss gateway as [[SoulissApp|https://code.google.com/p/souliss/wiki/AndroidApplication]]  does, so you should specify the networking information in the configuration file as follow.

Edit {{{.\openhab\configurations\openhab.cfg}}}

Add at the bottom:
{{{
########################### Souliss Binding ####################################
#
# Souliss  
# 
# For ITEM defination in file .item 
# {souliss=<Typical>:<nodeID>:<slot>:[<bit>]}

souliss:IP_LAN=192.168.1.105
souliss:USER_INDEX=71
souliss:NODE_INDEX=134
#SERVERPORT - Leave empty for casual port
souliss:SERVERPORT=

#time in mills
souliss:REFRESH_DBSTRUCT_TIME=600000
souliss:REFRESH_SUBSCRIPTION_TIME=120000
souliss:REFRESH_HEALTY_TIME=60000
souliss:REFRESH_MONITOR_TIME=500
souliss:SEND_DELAY=1500
souliss:SEND_MIN_DELAY=100
################################################################################
}}}

The following parameters need to be changed:

| Parameter | Description | Range |
| IP_LAN | The IP address of Souliss Gateway node | - |
| USER_INDEX | Identify the index of the openHAB binding | 1 - 100 |
| NODE_NUMBER | Identify the node of the openHAB binding | 1 - 254 |

Please ensure that each user interface (SoulissApp, openHAB, ...) must have a different //USER_INDEX// and //NODE_NUMBER//, those values are used to identify the interface.
You can get the values used by SoulissApp from the Networking menu.

== Matching Items and Typicals ==

Souliss provide a set of [[Typicals|https://code.google.com/p/souliss/wiki/Typicals]] those are predefined logic dedicated to Smarthome like lights, heatings or antitheft. Typicals match directly with openHAB Items, this define the interaction between the user interface in openHAB (same is for SoulissApp) and the action executed by the node. 

=== Configure .items file ===

Define your Souliss deployment inside openHAB. To do this, you'll have to statically //map// your device inside openHAB environment.

Edit {{{.\openhab\configurations\items\defaultSitemap.items}}}

define your own items and add to the end of each line of definition

   {{{ {souliss=<Typical>:<nodeID>:<slot>:[<bit>]} }}}

where Typicals can be T11, T12, T13, T16, T1A, T22, T51, T52, T53, T57, D98, D99 (more will be supported in the future)

| Parameter | Description | Range |
| nodeID | Is the ID of the node, the first node listed in your SoulissApp has nodeID 1, increase for your further nodes | 1 - 254 |
| slot | Is the slot where your Typical is located, this is defined in the sketch loaded in your node | 1 - 254 |
| bit | Is used only for Typicals that works bitwise as T1A | 1 - 8 |

An example of the *.items* configuration files is below, consider that openHAB has its own syntax for the configuration files.

{{{
Switch LuceSogg	"LuceSogg" (GF_Soggiorno, TechnicView_Node0) {souliss="T11:0:6", autoupdate=false}
}}}

{{{
Number Temperature_GF_Soggiorno "Temperatura Soggiorno [%.1f °C]"	<temperature> (temperature, GF_Temperature, TechnicView_Node0) {souliss="T52:0:0"}
}}}

{{{
Number Umidita_GF_Soggiorno "Umidità Soggiorno [%.1f %%]"	<temperature> (temperature, GF_Temperature, TechnicView_Node0) {souliss="T53:0:2"}
}}}

{{{
Number Consumo_GF_Soggiorno "Consumo [%.1f W]" <energy>	(GF_Temperature, TechnicView_Node0) {souliss="T57:0:4"}
}}}

{{{
Rollershutter Shutter1_GF_Soggiorno "Tenda1" (GF_Soggiorno, TechnicView_Node3 {souliss="T22:3:0", autoupdate=false} 
}}}

{{{
Contact ContattoTest "Contatto" (GF_Soggiorno, Lights) {souliss="T13:0:1", autoupdate=true}
}}}

{{{
Contact C2 "BIT 3" (GF_Soggiorno, TechnicView_Node3) {souliss="T1A:3:5:2"}
}}}

{{{
Contact C3 "BIT 4" (GF_Soggiorno, TechnicView_Node3) {souliss="T1A:3:5:3"}
}}}

{{{
Color  RGB_Led_Strip_1 "RGB Led Strip 1" <slider> (GF_Soggiorno)  {souliss="T16:0:2", autoupdate=false}
}}}

=== Service Typicals  ===

In order to track the health and timestamps two service Typicals has been introduced: D98 (Health) e D99 (Timestamp), those are not defined in Souliss sketches and are only available on the binding.

Use them as :

{{{
{souliss="D98:<nodeNumber>:998"}
{souliss="D99:<nodeNumber>:999"}
}}}

Example:

{{{
Number HEALTH_Nodo1_GF_Servizio "Health Nodo 1 [%1d]" <keyring> (Diagnostic, TechnicView_Node0) {souliss="D98:0:998"}

String TIMESTAMP_Nodo1_GF_Servizio "Timestamp Nodo 1 [%1$td.%1$tm.%1$tY %1$tk:%1$tM:%1$tS]" <keyring> (Diagnostic, TechnicView_Node0) {souliss="D99:0:999"}
}}}

== Get Support with the Community ==

Souliss is an open-source and community driven project, you can use the 
[[http://www.souliss.net/|site souliss.net]]
[[Community|https://github.com/souliss/souliss/wiki/Community]]
to get help and share you results.